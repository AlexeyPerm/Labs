#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
using namespace std;

const unsigned int str_lenght = 50;
int structCount = 2;

struct Information {
	int num = 0;
	char name[str_lenght];
	char autor[str_lenght];
	char storage[str_lenght];
	unsigned int volume;
};

void AddDataToStructInformation(Information *info, const unsigned int *a) {	//функция принимает указатель на адрес переменной, где хранится общее кол-во заполненных структур.
	++(*info).num;
	cout << "Название: \n";
	gets_s((*info).name, *a);
	cout << endl;
	cout << "Автор: \n";
	gets_s((*info).autor, *a);
	cout << endl;
	cout << "Носитель: \n";
	gets_s((*info).storage, *a);
	cout << endl;
	cout << "Объём: \n";
	//Вводим число и пропускаем один символ, которым является "\n". Если этого не сделать, то "\n" останется в потоке ввода и получится
	//так, что в gets_s(info[k].name, *a); введётся этот "\n". 
	(cin >> (*info).volume).get();
	cout << endl;
}

int SaveToFile(int &structCount, Information info) {
	FILE *f = fopen("file.bin", "ab");	//Файл открывается для дополнения. 
	if (f == NULL)
	{
		cout << "Не удаётся открыть файл";
		return 0;
	}
	fwrite(&info, sizeof(struct Information), 1, f);
	fclose(f);
	return 1;
}

int PrintInformation(char filename[], int count) {
	Information info_output;
	FILE *f = fopen(filename, "rb");
	if (f == NULL)
	{
		cout << "Не удаётся открыть файл";
		return 0;
	}
	int i = 0;
	cout << endl << "Данные в файле: \n";
	while (structCount) {
		fread(&info_output, sizeof(Information), 1, f);
		cout << "\n=========== Элемент номер " << info_output.num << " ===========\n";
		cout << "Название: " << info_output.name << endl;
		cout << "Автор:    " << info_output.autor << endl;
		cout << "Носитель: " << info_output.storage << endl;
		cout << "Объём:    " << info_output.volume << endl;
		structCount--;
	}
	fclose(f);
}


int main() {
	char defaultFilename[] = "file.bin";	//Потом при switch - case заставить заполнить руками
	setlocale(LC_ALL, "ru");
	Information info;

	for (int i = 1; i <= structCount; i++)
	{
		AddDataToStructInformation(&info, &str_lenght);
		SaveToFile(structCount, info);
	}
	PrintInformation(defaultFilename, structCount);



	return 0;
}