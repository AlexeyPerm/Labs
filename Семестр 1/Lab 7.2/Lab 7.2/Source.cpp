#include <iostream>
using namespace std;

void kvadr(int count, ...) {
	//Первый параметр count в функции указывает на то, сколько параметров содержится в функции 
	int *pa = &count;		//создаём указатель на адрес ячейки, где хранится параметр count;

	//int x - множитель, на который нужно сместить указатель ячейку, в которой хранится следующий аругмент функции. 
	//Делается для корректности работы программы на x86 и x64 системах
	int x = sizeof(pa) / sizeof(int);	
	double sqrt_a;
	int result = 0;
	pa += x;					//переходим к следующему адресу параметра, где хранится число, которое нужно посчитать. 
	while (count--) {		//Пока count больше нуля выполняем цикл. 
		if (*pa >= 0) {		//разыменовываем указатель, чтобы работать не с адресом, а числом и сравниваем это число.
			sqrt_a = (double)sqrt(*pa);
			if (sqrt_a / trunc(sqrt_a) == 1) {		//функция trunk округляет до целого числа.
				cout << "Число " << *pa << " точный квадрат\n";
				result++;
			}
			else {
				cout << "Число " << *pa << " не точный квадрат\n";
			}
		}
		else {
			cout << "Число " << *pa << " отрицательное. Квадратный корень не извлекается. \n";
		}
		pa += x;	
	}
	cout << "Количество чисел, являющихся точными квадратами: " << result << endl << endl;
}

int main() {
	setlocale(LC_ALL, "ru");
	kvadr(3, -5, 999, 361);
	kvadr(7, 81, 900, 361, 265, 2345, 529, 663);
	kvadr(11, 36, 123123, 361, 1000000, 2, 9, 14, -1000, 0, 100, 225);
	return 0;
}